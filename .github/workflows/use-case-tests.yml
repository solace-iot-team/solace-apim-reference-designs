# ---------------------------------------------------------------------------------------------
# MIT License
# Copyright (c) 2021, Solace Corporation, Ricardo Gomez-Ulmke (ricardo.gomez-ulmke@solace.com)
# ---------------------------------------------------------------------------------------------

name: use-case-tests
on:
  # for testing
  workflow_dispatch:
  # production
  schedule:
  #   # - cron: '0 7 * * MON'
    - cron: '0 7 * * *'
  pull_request:
    branches:
      - main
env:
  DEBUG_FLAG: ${{ true }}
  # DEBUG_FLAG: ${{ false }}
jobs:
  use_case_tests:
    runs-on: ubuntu-18.04
    env:
      UC_TEST_ELEVATOR_CO_HOME_DIR: "use-cases/elevator-co"
      UC_TEST_CAR_CO_HOME_DIR: "use-cases/car-co"
      UC_TEST_OUTPUT_DIR: "use-cases/common/test/tmp"
      UC_TEST_OUTPUT_NAME: "apim-reference-designs-use-case-tests"
    strategy:
      max-parallel: 1
      matrix:
        node: [ '12', '14' ]
    steps:
      - name: Check Auth
        if: github.event_name == 'workflow_dispatch' && github.actor != 'ricardojosegomezulmke' && github.actor != '195858'
        run: |
          echo "not authorized"
          echo '::set-output name=IS_AUTHORIZED::false'
        id: auth
      - name: Cancel Workflow
        if: ${{ always() && steps.auth.outputs.IS_AUTHORIZED == 'false' }}
        uses: andymckay/cancel-action@0.2

      - name: Checkout Current Branch
        uses: actions/checkout@master
        with:
          ref: ${{ github.ref }}

      - name: env before install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo "docker --version"; docker --version
          echo "docker-compose --version"; docker-compose --version

      - name: setup node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node }}

      - name: env after install
        if: env.DEBUG_FLAG == 'true'
        run: |
          echo "bash --version: "; bash --version
          echo "node --version: "; node --version
          echo "npm --version: "; npm --version
          echo "docker --version"; docker --version
          echo "docker-compose --version"; docker-compose --version

      - name: Run Tests
        run: |
          export APIM_BOOTSTRAP_SOLACE_CLOUD_API_URL=${{ secrets.SOLACE_CLOUD_API_URL }}
          export APIM_BOOTSTRAP_SOLACE_CLOUD_TOKEN=${{ secrets.SOLACE_CLOUD_TOKEN }}
          export APIM_BOOTSTRAP_SOLACE_EVENT_PORTAL_API_URL=${{ secrets.SOLACE_EVENT_PORTAL_BETA_API_URL }}
          export APIM_BOOTSTRAP_SOLACE_EVENT_PORTAL_TOKEN=${{ secrets.SOLACE_EVENT_PORTAL_BETA_TOKEN }}
          export APIM_BOOTSTRAP_SOLACE_CLOUD_DEV_GW_SERVICE_ID=${{ secrets.SOLACE_CLOUD_DEV_GW_SERVICE_ID }}
          export APIM_BOOTSTRAP_SOLACE_CLOUD_PROD_GW_SERVICE_ID=${{ secrets.SOLACE_CLOUD_PROD_GW_SERVICE_ID }}
          echo "############# car-co #############"
          cd "${GITHUB_WORKSPACE}/${UC_TEST_CAR_CO_HOME_DIR}/bootstrap"
          npm install
          cd "test"
          ./run.sh
          echo "############# elevator-co #############"
          cd "${GITHUB_WORKSPACE}/${UC_TEST_ELEVATOR_CO_HOME_DIR}/bootstrap"
          npm install
          cd "test"
          ./run.sh

      - name: Archive logs
        if: ${{ (failure() && !cancelled()) || (always() && (github.event_name=='workflow_dispatch' || env.DEBUG_FLAG=='true') ) }}
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.UC_TEST_OUTPUT_NAME }}
          path: ${{ github.workspace }}/${{ env.UC_TEST_OUTPUT_DIR }}
          if-no-files-found: error

###
# The End.
