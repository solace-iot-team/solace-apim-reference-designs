--- 
# cloud.mongodb.com endpoint to register / remove IP-address from allow list
mongodb_cloud_api_url: {add_mongodb_cloud_api_url}
mongodb_cloud_api_user: {add_mongodb_cloud_api_user}
mongodb_cloud_api_password: {add_mongodb_cloud_api_password}

#mongodb url for Platform-API 
mongodb_url: {add_mongodb_url_including_username_and_password}

# apim-connector container version
apim_connector_version: latest
# apim-connector auth details 
# key for apim-connector to verify issued jwt-tokens
#   with no oauth/jwt enabled, a dummy is sufficient
auth_verification_key_dir: /some/location
auth_verification_key: jwt_dummy.pem
auth_extraction_user_principal: default
auth_extraction_orgs: default
auth_extraction_roles: default
auth_verification_issuer: default
auth_verification_aud: default
auth_discovery_oidc_url: default

# portal version published in docker_hub
portal_version: latest
# sammode: dev -> login screen is disabled
# sammode: prod -> login screen is enabled (username = solace_portal_login_user, password = solace_portal_login_password)
sammode: prod
# will get rendered in portal to indicate the context (e.g. solace-apim-demo)
samcontext: default
#list of all platform api users (set in organization_users.json)
#  roles -> org-admin or platform-admin
solace_spa_users:
  - {name: admin11, password: xyz, role: platform-admin}
  - {name: user11, password: abc, role: org-admin}
  - {name: user12, password: efg, role: org-admin}
  - {name: user13, password: hij, role: org-admin}

# the platform-api user for e.g. portal
# must be one of solace_sap_users and the same password
solace_spa_user: user11
solace_spa_password: abc
#admin-name of platform api (set as env in docker-compose)
solace_spa_adminuser: admin11
#admin-password of platform api (set as env in docker-compose)
solace_spa_adminpassword: xyz
#login name of portal (set as env in docker-compose)
solace_portal_login_user: portal
#password of portal (set as env in docker-compose)
solace_portal_login_password: secret3