# Installs and prepares Docker Host
# Updates to latest greatest and prepares a fresh Ubuntu Box

- name: Create org
  uri:
    url: "http://{{platform_api_host_ip}}:3000/v1/organizations"
    method: POST
    force_basic_auth: yes
    user: "{{solace_spa_adminuser}}"
    password: "{{solace_spa_adminpassword}}"
    body_format: json
    headers:
      Content-Type: application/json
    status_code: 201
    body: "{ \"name\": \"{{org_name}}\", \"cloud-token\": \"{{org_token}}\"}"
  ignore_errors: yes

- name: Create environment
  uri:
    url: "http://{{platform_api_host_ip}}:3000/v1/{{org_name}}/environments"
    method: POST
    force_basic_auth: yes
    user: "{{solace_spa_user}}"
    password: "{{solace_spa_password}}"
    body_format: json
    headers:
      Content-Type: application/json
    status_code: 201
    body: "{ \"name\": \"{{item.name}}\", \"description\": \"{{item.description}}\", \"serviceId\": \"{{item.serviceid}}\"}"
  loop: "{{org_environments}}"
  ignore_errors: yes

- name: Create Developer
  uri:
    url: "http://{{platform_api_host_ip}}:3000/v1/{{org_name}}/developers"
    method: POST
    force_basic_auth: yes
    user: "{{solace_spa_user}}"
    password: "{{solace_spa_password}}"
    body_format: json
    headers:
      Content-Type: application/json
    status_code: 201
    body: "{ \"userName\": \"{{item.userName}}\", \"email\": \"{{item.email}}\", \"firstName\": \"{{item.firstName}}\", \"lastName\": \"{{item.lastName}}\"}"
  loop: "{{org_developers}}"
  ignore_errors: yes

    

